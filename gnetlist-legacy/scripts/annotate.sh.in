#!/bin/sh

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02111-1301, USA

#------------------------------------------------------------------
#--------------------------------JM Routoure-----------------------
#---------------------------------28/02/2000-----------------------
#------------------------------------------------------------------

if [ -z "$1" ]; then
	echo "No sch file indicated"
	echo "usage:"
	echo "annotate file"
	echo "	file is generated by gschem"
	exit 1
fi

# create a secure temp directory
tmpd=${TMP:-/tmp}/annotate.$$
mkdir -m 0700 ${tmpd}
rc=$?
if test $rc -ne 0 ; then
	cat << EOF

$0:  ERROR -- failed to securily create ${tmpd}
Check to make sure that the directory does not already
exist and that you have sufficient permissions to create it.

mkdir returned $rc.

EOF
	exit 1
fi

# Determine the different refdes=?

list=`@AWK@ '/^refdes=[A-Z]+\?/ {
		A=$1; gsub(/refdes=/,"",A)
		gsub(/\?/,"",A)
		print A}' $1 | sort | @AWK@ 'BEGIN {if (NR==1) {A=$1} }{if (A !=$1) print ; A=$1}' - `


if [ -z "$list" ]; then
	echo "No new devices found!"
	exit 0
fi

# make a copy of the current schematics

cp $1 $1.sauv

# Replace the ? by a number
sc=${tmpd}/sc.awk

for f in  $list; do
    # creation du script gawk 1
    echo "BEGIN {R=0}" >${sc}
    echo "/^refdes=$f[0-9]+/ {B=\$1" >>${sc}
    echo "gsub(/refdes=[A-Z]+/,\"\",B)" >>${sc}
    echo "if (B>R) {R=B}" >>${sc}
    echo "}" >>${sc}
    echo "END {printf(\"%d\",R)}" >>${sc}
    # execution des scripts

    IMAX=`@AWK@ -f ${sc} $1`
    echo "Numbering of $f will start at $IMAX"

    # creation du script gawk 2

    echo "BEGIN {R=MAX} ">${sc}
    echo "{if (match(\$1,/^refdes=$f\?/)!=0) {" >>${sc}
    echo "R=R+1" >>${sc}
    echo "sub(/\?/,R,\$1)" >>${sc}
    echo "print \$1 } " >>${sc}
    echo "else {print \$0}}">>${sc}

    #echo "OK=1" >>${sc}
    #echo "LL=NR}" >>${sc}
    #echo "{" >>${sc}
    #echo "if ((OK==1)&&(NR==LL+1)) {print \$1\" \"\$2\" \"\$3\" \"\$4\" \"\$5\" \"1\" \"\$7\" \"\$8 }" >>${sc}
    #echo "if (NR==LL+2) {OK=0} " >>${sc}
    #echo "if (OK==0) {print \$0} " >>${sc}
    #echo "}" >>${sc}

    #execute the second script

    cat $1 | @AWK@ -v MAX=$IMAX -f ${sc}  - > $1.tmp
    mv $1.tmp $1

done

# clean !

rm  -fr ${tmpd}
